/******************************************************************************
 * Copyright (C) 2010-2011 Lastrix                                            *
 * This file is part of ASN1S.                                                *
 *                                                                            *
 * ASN1S is free software: you can redistribute it and/or modify              *
 * it under the terms of the GNU General Public License as published by       *
 * the Free Software Foundation, either version 2 of the License, or          *
 * (at your option) any later version.                                        *
 *                                                                            *
 * ASN1S is distributed in the hope that it will be useful,                   *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with ASN1S. If not, see <http://www.gnu.org/licenses/>.              *
 ******************************************************************************/

/* Generated By:JJTree&JavaCC: Do not edit this line. ASN1SchemaCompilerConstants.java */
package org.lastrix.asn1s.schema.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ASN1SchemaCompilerConstants {

	/**
	 * End of File.
	 */
	int EOF                        = 0;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_DOT                  = 8;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_ASSIGNMENT           = 9;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_MINUS                = 10;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_REF                  = 11;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_STAR                 = 12;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_RANGE                = 13;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_ELLIPSIS             = 14;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_LESS                 = 15;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_MORE                 = 16;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_COMMA                = 17;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_APOSTROPHE           = 18;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_BAR                  = 19;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_COLON                = 20;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_SEMICOLON            = 21;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_BRACKET_LEFT         = 22;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_BRACKET_RIGHT        = 23;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_PAREN_LEFT           = 24;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_PAREN_RIGHT          = 25;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_BRACE_LEFT           = 26;

	/**
	 * RegularExpression Id.
	 */
	int TOKEN_BRACE_RIGHT          = 27;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ABSENT            = 28;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ABSTRACT_SYNTAX   = 29;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ALL               = 30;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_APPLICATION       = 31;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_AUTOMATIC         = 32;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_BEGIN             = 33;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_BIT               = 34;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_BMP_STRING        = 35;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_BOOLEAN           = 36;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_BY                = 37;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_CHARACTER         = 38;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_CHOICE            = 39;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_CLASS             = 40;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_COMPONENT         = 41;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_COMPONENTS        = 42;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_CONSTRAINED       = 43;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_CONTAINING        = 44;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_DEFAULT           = 45;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_DEFINITIONS       = 46;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EMBEDDED          = 47;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ENCODED           = 48;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_END               = 49;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ENUMERATED        = 50;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EXCEPT            = 51;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EXPLICIT          = 52;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EXPORTS           = 53;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EXTENSIBILITY     = 54;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_EXTERNAL          = 55;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_FALSE             = 56;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_FROM              = 57;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_GENERALIZED_TIME  = 58;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_GENERAL_STRING    = 59;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_GRAPHIC_STRING    = 60;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_IA5_STRING        = 61;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_IDENTIFIER        = 62;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_IMPLICIT          = 63;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_IMPLIED           = 64;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_IMPORTS           = 65;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_INCLUDES          = 66;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_INSTANCE          = 67;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_INTEGER           = 68;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_INTERSECTION      = 69;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_ISO646_STRING     = 70;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_MAX               = 71;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_MIN               = 72;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_MINUS_INFINITY    = 73;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_NULL              = 74;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_NUMERIC_STRING    = 75;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_OBJECT            = 76;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_OBJECT_DESCRIPTOR = 77;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_OCTET             = 78;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_OF                = 79;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_OPTIONAL          = 80;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PATTERN           = 81;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PDV               = 82;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PLUS_INFINITY     = 83;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PRESENT           = 84;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PRINTABLE_STRING  = 85;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_PRIVATE           = 86;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_REAL              = 87;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_RELATIVE_OID      = 88;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_SEQUENCE          = 89;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_SET               = 90;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_SIZE              = 91;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_STRING            = 92;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_SYNTAX            = 93;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_T61_STRING        = 94;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_TAGS              = 95;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_TELETEX_STRING    = 96;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_TRUE              = 97;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UPPERCASE_START   = 98;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UNION             = 99;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UNIQUE            = 100;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UNIVERSAL         = 101;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UNIVERSAL_STRING  = 102;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UTC_TIME          = 103;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_UTF8_STRING       = 104;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_VIDEOTEX_STRING   = 105;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_VISIBLE_STRING    = 106;

	/**
	 * RegularExpression Id.
	 */
	int RESERVED_WITH              = 107;

	/**
	 * RegularExpression Id.
	 */
	int UPPERCASE_START            = 108;

	/**
	 * RegularExpression Id.
	 */
	int LOWERCASE_START            = 109;

	/**
	 * RegularExpression Id.
	 */
	int UPPERCASE                  = 110;

	/**
	 * RegularExpression Id.
	 */
	int LOWERCASE                  = 111;

	/**
	 * RegularExpression Id.
	 */
	int TYPE_FIELD_REFERENCE       = 112;

	/**
	 * RegularExpression Id.
	 */
	int VALUE_FIELD_REFERENCE      = 113;

	/**
	 * RegularExpression Id.
	 */
	int EXPONENT                   = 114;

	/**
	 * RegularExpression Id.
	 */
	int ZERO                       = 115;

	/**
	 * RegularExpression Id.
	 */
	int NUMBER                     = 116;

	/**
	 * RegularExpression Id.
	 */
	int REAL_EXPONENT              = 117;

	/**
	 * RegularExpression Id.
	 */
	int REAL                       = 118;

	/**
	 * RegularExpression Id.
	 */
	int BIT_STRING                 = 119;

	/**
	 * RegularExpression Id.
	 */
	int HEX_STRING                 = 120;

	/**
	 * RegularExpression Id.
	 */
	int STRING                     = 121;

	/**
	 * RegularExpression Id.
	 */
	int OBJECT_IDENTIFIER          = 122;

	/**
	 * Lexical state.
	 */
	int DEFAULT          = 0;

	/**
	 * Lexical state.
	 */
	int WithinASNComment = 1;

	/**
	 * Literal token values.
	 */
	String[] tokenImage = {
	                      "<EOF>",
	                      "\" \"",
	                      "\"\\t\"",
	                      "\"\\n\"",
	                      "\"\\r\"",
	                      "\"--\"",
	                      "<token of kind 6>",
	                      "<token of kind 7>",
	                      "\".\"",
	                      "\"::=\"",
	                      "\"-\"",
	                      "\"@\"",
	                      "\"*\"",
	                      "\"..\"",
	                      "\"...\"",
	                      "\"<\"",
	                      "\">\"",
	                      "\",\"",
	                      "\"\\\'\"",
	                      "\"|\"",
	                      "\":\"",
	                      "\";\"",
	                      "\"[\"",
	                      "\"]\"",
	                      "\"(\"",
	                      "\")\"",
	                      "\"{\"",
	                      "\"}\"",
	                      "\"ABSENT\"",
	                      "\"ABSTRACT-SYNTAX\"",
	                      "\"ALL\"",
	                      "\"APPLICATION\"",
	                      "\"AUTOMATIC\"",
	                      "\"BEGIN\"",
	                      "\"BIT\"",
	                      "\"BMPString\"",
	                      "\"BOOLEAN\"",
	                      "\"BY\"",
	                      "\"CHARACTER\"",
	                      "\"CHOICE\"",
	                      "\"CLASS\"",
	                      "\"COMPONENT\"",
	                      "\"COMPONENTS\"",
	                      "\"CONSTRAINED\"",
	                      "\"CONTAINING\"",
	                      "\"DEFAULT\"",
	                      "\"DEFINITIONS\"",
	                      "\"EMBEDDED\"",
	                      "\"ENCODED\"",
	                      "\"END\"",
	                      "\"ENUMERATED\"",
	                      "\"EXCEPT\"",
	                      "\"EXPLICIT\"",
	                      "\"EXPORTS\"",
	                      "\"EXTENSIBILITY\"",
	                      "\"EXTERNAL\"",
	                      "\"FALSE\"",
	                      "\"FROM\"",
	                      "\"GeneralizedTime\"",
	                      "\"GeneralString\"",
	                      "\"GraphicString\"",
	                      "\"IA5String\"",
	                      "\"IDENTIFIER\"",
	                      "\"IMPLICIT\"",
	                      "\"IMPLIED\"",
	                      "\"IMPORTS\"",
	                      "\"INCLUDES\"",
	                      "\"INSTANCE\"",
	                      "\"INTEGER\"",
	                      "\"INTERSECTION\"",
	                      "\"ISO646String\"",
	                      "\"MAX\"",
	                      "\"MIN\"",
	                      "\"MINUS-INFINITY\"",
	                      "\"NULL\"",
	                      "\"NumericString\"",
	                      "\"OBJECT\"",
	                      "\"ObjectDescriptor\"",
	                      "\"OCTET\"",
	                      "\"OF\"",
	                      "\"OPTIONAL\"",
	                      "\"PATTERN\"",
	                      "\"PDV\"",
	                      "\"PLUS-INFINITY\"",
	                      "\"PRESENT\"",
	                      "\"PrintableString\"",
	                      "\"PRIVATE\"",
	                      "\"REAL\"",
	                      "\"RELATIVE-OID\"",
	                      "\"SEQUENCE\"",
	                      "\"SET\"",
	                      "\"SIZE\"",
	                      "\"STRING\"",
	                      "\"SYNTAX\"",
	                      "\"T61String\"",
	                      "\"TAGS\"",
	                      "\"TeletexString\"",
	                      "\"TRUE\"",
	                      "\"TYPE-IDENTIFIER\"",
	                      "\"UNION\"",
	                      "\"UNIQUE\"",
	                      "\"UNIVERSAL\"",
	                      "\"UniversalString\"",
	                      "\"UTCTime\"",
	                      "\"UTF8String\"",
	                      "\"VideotexString\"",
	                      "\"VisibleString\"",
	                      "\"WITH\"",
	                      "<UPPERCASE_START>",
	                      "<LOWERCASE_START>",
	                      "<UPPERCASE>",
	                      "<LOWERCASE>",
	                      "<TYPE_FIELD_REFERENCE>",
	                      "<VALUE_FIELD_REFERENCE>",
	                      "<EXPONENT>",
	                      "\"0\"",
	                      "<NUMBER>",
	                      "<REAL_EXPONENT>",
	                      "<REAL>",
	                      "<BIT_STRING>",
	                      "<HEX_STRING>",
	                      "<STRING>",
	                      "<OBJECT_IDENTIFIER>",
	                      "\"[[\"",
	                      "\"]]\"",
	                      "\"!\"",
	                      "\"^\"",
	};

}
